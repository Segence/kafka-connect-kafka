plugins {
  id 'com.github.spotbugs' version '6.0.26' apply false
  id 'checkstyle'
  id 'org.owasp.dependencycheck' version '11.1.0'
  id 'com.adtran.scala-multiversion-plugin' version '2.1.0' apply false
  id 'com.github.maiflai.scalatest' version '0.32' apply false
  id 'org.scoverage' version '8.1' apply false
  id 'com.github.kt3k.coveralls' version '2.12.2'
  id "com.vanniktech.maven.publish" version '0.30.0'
  id 'signing'
}

apply plugin: 'org.owasp.dependencycheck'

group = 'com.segence.kafka.connect'

repositories {
  mavenLocal()
  maven {
    url = "https://repo.maven.apache.org/maven2"
  }
  maven {
    url = "https://repo1.maven.org/maven2"
  }
  maven {
    name 'Confluent'
    url 'https://packages.confluent.io/maven'
  }
}

tasks.withType(Copy).all {
  duplicatesStrategy 'exclude'
}

tasks.named('publishMavenJavaPublicationToMavenCentralRepository') {
  dependsOn('signMavenPublication')
}

dependencyCheck {
  nvd.apiKey = System.getenv("NVD_API_KEY")
  nvd.datafeedUrl = "https://mirror.cveb.in/nvd/json/cve/1.1/nvdcve-1.1-{0}.json.gz"
}

apply from: 'gradle/java.gradle'
apply from: 'gradle/it.gradle'

if (project.gradle.startParameter.taskNames.contains('integrationTest')) {
  apply from: 'gradle/scala.gradle'
}

mavenPublishing {
  coordinates(project.group, project.name, version)

  pom {
    name = 'Kafka Connect Kafka connector'
    description = 'A connector with a Kafka sink.'
    inceptionYear = "2024"
    url = 'https://github.com/Segence/kafka-connect-kafka'
    licenses {
      license {
        name = 'The Apache License, Version 2.0'
        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
      }
    }
    developers {
      developer {
        id = 'robvadai'
        name = 'Rob Vadai'
        email = 'rvadai@segence.com'
      }
    }
    scm {
      url = 'https://github.com/Segence/kafka-connect-kafka'
    }
  }
}

signing {
  def signingKey = findProperty("signingInMemoryKey")
  def signingPassword = findProperty("signingInMemoryKeyPassword")
  useInMemoryPgpKeys(signingKey, signingPassword)
  sign publishing.publications.mavenJava
}

dependencies {
  api (
    "org.apache.kafka:connect-runtime:${kafkaVersion}",
    "io.confluent:kafka-schema-registry-client:${confluentVersion}",
    "io.confluent:kafka-avro-serializer:${confluentVersion}",
    "org.slf4j:slf4j-api:${slf4jVersion}",
  )
  testImplementation (
    "org.apache.kafka:connect-runtime:${kafkaVersion}",
    "io.confluent:kafka-schema-registry-client:${confluentVersion}",
    "io.confluent:kafka-avro-serializer:${confluentVersion}",
    "org.slf4j:slf4j-api:${slf4jVersion}",
    "org.slf4j:slf4j-reload4j:${slf4jVersion}",
    "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
    "org.junit.jupiter:junit-jupiter:${junitVersion}",
    "org.junit.platform:junit-platform-runner:${junitPlatformVersion}",
    "org.mockito:mockito-core:${mockitoVersion}",
    "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
  )
}

