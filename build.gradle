plugins {
//  id 'com.github.spotbugs' version '6.0.18' apply false
//  id 'checkstyle'
//  id 'org.owasp.dependencycheck' version '11.1.0'
  id 'com.adtran.scala-multiversion-plugin' version '2.1.0' apply false
  id 'com.github.maiflai.scalatest' version '0.32' apply false
  id 'org.scoverage' version '8.1' apply false
  id 'maven-publish'
}

//apply plugin: 'maven-publish'
//  apply plugin: 'org.owasp.dependencycheck'

group = 'com.segence.kafka.connect'

repositories {
  mavenLocal()
  maven {
    url = "https://repo.maven.apache.org/maven2"
  }
  maven {
    url = "https://repo1.maven.org/maven2"
  }
  maven {
    name 'Confluent'
    url 'https://packages.confluent.io/maven'
  }
}

tasks.withType(Copy).all {
  duplicatesStrategy 'exclude'
}

//  dependencyCheck {
//    nvd {
//      apiKey = System.getenv("NVD_API_KEY")
//    }
//  }

// publishing {
//   repositories {
//     maven {
//       url = project.hasProperty('publishRepository') && publishRepository == 'release' ? publishReleaseRepositoryUrl : publishSnapshotRepositoryUrl
//       credentials {
//         username System.getenv("AZURE_DEVOPS_FEED_USER")
//         password System.getenv("AZURE_DEVOPS_FEED_PASSWORD")
//       }
//     }
//   }
// }



apply from: 'gradle/java.gradle'
apply from: 'gradle/it.gradle'

apply plugin: 'scala'
apply plugin: 'com.adtran.scala-multiversion-plugin'

jar {
  archiveFileName = "${rootProject.name}.jar"
}

dependencies {
  compileOnly (
    "org.scala-lang:scala-library:%scala-version%",
    "org.apache.kafka:connect-runtime:${kafkaVersion}",
    "io.confluent:kafka-schema-registry-client:${confluentVersion}",
    "io.confluent:kafka-avro-serializer:${confluentVersion}",
    "org.slf4j:slf4j-api:${slf4jVersion}",
  )
  testImplementation (
    "org.apache.kafka:connect-runtime:${kafkaVersion}",
    "io.confluent:kafka-schema-registry-client:${confluentVersion}",
    "io.confluent:kafka-avro-serializer:${confluentVersion}",
    "org.slf4j:slf4j-api:${slf4jVersion}",
    "org.slf4j:slf4j-reload4j:${slf4jVersion}",

    "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
    "org.junit.jupiter:junit-jupiter:${junitVersion}",
    "org.hamcrest:hamcrest-all:${hamcrestVersion}",
    "org.junit.platform:junit-platform-runner:${junitPlatformVersion}",

    "org.scala-lang:scala-library:%scala-version%",
    "org.scalatest:scalatest_%%:${scalaTestVersion}",
    "org.scalatestplus:junit-5-10_%%:${scalaTestPlusVersion}",

    "io.github.embeddedkafka:embedded-kafka-connect_%%:${embeddedKafkaVersion}",
    "io.github.embeddedkafka:embedded-kafka-schema-registry_%%:${confluentVersion}",
    "com.softwaremill.sttp.client3:core_%%:${sttpVersion}"
  )
}

